{
	"info": {
		"_postman_id": "aeecfd81-1fab-4346-9068-77c62926bbf0",
		"name": "Channing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Incident with body as File Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var rep = xml2Json(responseBody);\r",
							"// var response = pm.response.json();\r",
							"\r",
							"//get sys_id from response\r",
							"console.log(rep.response.result.sys_id);\r",
							"pm.globals.set(\"sysID\", rep.response.result.sys_id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test('Verify content type', function () {\r",
							"     pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"});\r",
							"\r",
							"pm.test('Verify Response Body ', function () {\r",
							"     pm.expect(rep.response.result.short_description).to.equal(pm.iterationData.get('short_descriptio'));\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "Tuna@123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/xml",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"short_description\": \"{{short_description}}\",\r\n    \"category\": \"{{category}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{Server}}/{{resource}}?sysparm_fields=sys_id,number, short_description",
					"protocol": "https",
					"host": [
						"{{Server}}"
					],
					"path": [
						"{{resource}}"
					],
					"query": [
						{
							"key": "sysparm_fields",
							"value": "sys_id,number, short_description"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update Incident",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result.short_description).to.eql(JSON.parse(pm.request.body.raw).short_description);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result.category).to.eql(JSON.parse(pm.request.body.raw).category);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"memory issu\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"short_description\": \"memory issue\",\r\n    \"category\": \"hardware\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{Server}}/{{resource}}/{{sysID}}?sysparm_fields=sys_id,number, category,short_description",
					"protocol": "https",
					"host": [
						"{{Server}}"
					],
					"path": [
						"{{resource}}",
						"{{sysID}}"
					],
					"query": [
						{
							"key": "sysparm_fields",
							"value": "sys_id,number, category,short_description"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Incident",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://{{Server}}/{{resource}}/{{sysID}}",
					"protocol": "https",
					"host": [
						"{{Server}}"
					],
					"path": [
						"{{resource}}",
						"{{sysID}}"
					],
					"query": [
						{
							"key": "sysparm_fields",
							"value": "sys_id,number, category,short_description",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "Tuna@123",
				"type": "string"
			},
			{
				"key": "username",
				"value": "admin",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "resource",
			"value": "api/now/table/incident"
		}
	]
}